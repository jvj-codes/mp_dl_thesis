# -*- coding: utf-8 -*-
"""
Created on Thu May 15 14:57:23 2025

@author: JVJ
"""

import numpy as np
import matplotlib.pyplot as plt
import matplotlib as mpl
from matplotlib.lines import Line2D

# 1) Your wealth percentiles (1st–99th) for years 2020–2023:
# Rows: percentiles 1–99; columns: 2020,2021,2022,2023
wealth_pct = np.array([
    [-792678, -885805, -918306, -957442],
    [-427258, -494552, -522669, -543469],
    [-272602, -315117, -335277, -346317],
    [-185665, -213348, -227604, -231045],
    [-127888, -145185, -154378, -152997],
    [ -86083,  -94754, -100430,  -96126],
    [ -53875,  -56281,  -59273,  -54289],
    [ -28201,  -26662,  -28518,  -23670],
    [  -8922,   -5537,   -7261,   -3138],
    [      0,       83,       0,      297],
    [   3005,    4154,    2707,    3848],
    [   7063,    8663,    6623,    7912],
    [  11624,   13776,   10992,   12511],
    [  16944,   19660,   16037,   17785],
    [  22926,   26219,   21755,   23645],
    [  29442,   33405,   27990,   30079],
    [  36492,   41105,   34834,   37045],
    [  43938,   49380,   42201,   44532],
    [  51911,   58133,   49899,   52424],
    [  60335,   67336,   58038,   60786],
    [  69190,   77009,   66631,   69625],
    [  78500,   87146,   75761,   79009],
    [  88342,   97763,   85343,   88943],
    [  98733,  109060,   95422,   99401],
    [ 109720,  121102,  106094,  110456],
    [ 121358,  133837,  117644,  122313],
    [ 133998,  147628,  129888,  135168],
    [ 147215,  162422,  142981,  148648],
    [ 161469,  178148,  156944,  163051],
    [ 176627,  194868,  172007,  178496],
    [ 192848,  212729,  188227,  195092],
    [ 210049,  231821,  205659,  212948],
    [ 228347,  252286,  224314,  232029],
    [ 247768,  274010,  244368,  252571],
    [ 268062,  296722,  265863,  274489],
    [ 289478,  320871,  288754,  297882],
    [ 312006,  346112,  312692,  322374],
    [ 335172,  372406,  337460,  348116],
    [ 359400,  399663,  363603,  375216],
    [ 384615,  427948,  390412,  403232],
    [ 410653,  456998,  418152,  432348],
    [ 437381,  486773,  446837,  462285],
    [ 464882,  517329,  476309,  493008],
    [ 492783,  548621,  506157,  524708],
    [ 521357,  580534,  536523,  557057],
    [ 550863,  613313,  567702,  590226],
    [ 580926,  646715,  599465,  624125],
    [ 611533,  680792,  631968,  658612],
    [ 643024,  715702,  665402,  693753],
    [ 675174,  751383,  699471,  730092],
    [ 707883,  788020,  734145,  767205],
    [ 741448,  825359,  769890,  804920],
    [ 775683,  863324,  806002,  843800],
    [ 810799,  902499,  843241,  883692],
    [ 846853,  942206,  881326,  924175],
    [ 883749,  982745,  920336,  965664],
    [ 921343, 1024012,  959932, 1008216],
    [ 959986, 1066680, 1000698, 1051744],
    [ 999499, 1110167, 1042041, 1096728],
    [1040075, 1154782, 1085129, 1142768],
    [1081838, 1200564, 1128982, 1189688],
    [1124800, 1247877, 1174313, 1238433],
    [1169239, 1296365, 1220518, 1288312],
    [1215473, 1346254, 1268118, 1339696],
    [1262834, 1397451, 1317655, 1392694],
    [1311824, 1450993, 1368422, 1447574],
    [1362932, 1505807, 1420615, 1503922],
    [1416028, 1562858, 1474989, 1562384],
    [1471030, 1621845, 1530682, 1623144],
    [1528132, 1683010, 1588899, 1685558],
    [1587350, 1747043, 1649335, 1750037],
    [1649268, 1813213, 1712597, 1818036],
    [1714558, 1882567, 1778037, 1889300],
    [1782324, 1955369, 1846962, 1963545],
    [1852740, 2031549, 1919095, 2040882],
    [1927208, 2111005, 1993922, 2122198],
    [2005715, 2194191, 2072889, 2207802],
    [2088138, 2281985, 2156420, 2298380],
    [2175155, 2375150, 2244554, 2393648],
    [2268113, 2474204, 2338352, 2494692],
    [2366805, 2580083, 2437552, 2602219],
    [2472924, 2691637, 2544164, 2716863],
    [2585909, 2812449, 2657590, 2840476],
    [2707616, 2941596, 2779880, 2973809],
    [2837960, 3082523, 2912877, 3118405],
    [2980896, 3234925, 3057619, 3275386],
    [3137298, 3400619, 3215505, 3447101],
    [3308532, 3585883, 3389611, 3637532],
    [3499262, 3790368, 3584150, 3849761],
    [3712690, 4021622, 3801085, 4087736],
    [3953621, 4284341, 4049635, 4357608],
    [4232520, 4591104, 4339586, 4678027],
    [4563395, 4956647, 4684091, 5054975],
    [4962915, 5407179, 5104303, 5517760],
    [5475099, 5981030, 5649525, 6118177],
    [6163335, 6779368, 6397302, 6934688],
    [7192609, 8003676, 7534449, 8186384],
    [9011430,10250600, 9666458,10476488],
    [13737729,16515601,15548080,16767008],
], float)

years = np.array([2020,2021,2022,2023])

def lorenz_from_pctiles(pctiles):
    # assume equal population weight per percentile
    n = len(pctiles)
    pop_share = np.concatenate([[0], np.linspace(1/n, 1.0, n)])
    mass      = pctiles * (1/n)
    cum_inc   = np.concatenate([[0], np.cumsum(mass)])
    return pop_share, cum_inc / cum_inc[-1]

# 2) Colormap: blue=2020 → red=2023
cmap = mpl.cm.get_cmap("coolwarm")
norm = mpl.colors.Normalize(vmin=years.min(), vmax=years.max())

plt.figure(figsize=(8,6))
for i, yr in enumerate(years):
    p, w = lorenz_from_pctiles(wealth_pct[:, i])
    plt.plot(p, w,
             color=cmap(norm(yr)),
             lw=1.8,
             alpha=0.9)

# equality line
plt.plot([0,1],[0,1], "k--", lw=1, label="Equality")

# legend proxies
early = Line2D([0],[0], color=cmap(norm(years[0])), lw=2, label=f"{years[0]} (earliest)")
late  = Line2D([0],[0], color=cmap(norm(years[-1])), lw=2, label=f"{years[-1]} (most recent)")

plt.legend(handles=[early, late, Line2D([0],[0],linestyle='--',color='k')],
           labels=[f"{years[0]} (earliest)", f"{years[-1]} (most recent)", "Equality"],
           loc="lower right")

# colorbar anchored to current figure
sm = mpl.cm.ScalarMappable(norm=norm, cmap=cmap)
sm.set_array([])
plt.gca()  # get current axes
cbar = plt.colorbar(sm, ax=plt.gca(), ticks=years, pad=0.02)
cbar.set_label("Year")

plt.title("Lorenz Curves of Wealth, 2020–2023")
plt.xlabel("Cumulative population share")
plt.ylabel("Cumulative share of wealth")
plt.grid(alpha=0.3)
plt.tight_layout()
plt.show()
